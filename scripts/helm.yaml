global:
  domain: ${taito_domain}
  url: https://${taito_domain}
  publicPort: 443
  logFormat: stackdriver
  logLevel: info    # trace, debug, info, warn, error, fatal
  registry: ${taito_image_registry}
  imagePullPolicy: ''
  debug: false

full-stack:
  persistence:
    enabled: ${wordpress_persistence_enabled}
    existingClaim:
    storageClass:
    # NOTE: Google does not support ReadWriteMany
    # --> all containers will be placed on the same Kubernetes node
    accessMode: ReadWriteOnce
    size: 8Gi

  ingress:
    class: nginx
    oldRewritePolicy: false
    tls: true
    maxBodySize: 5m
    basicAuth:
      enabled: true
      htpasswdSecret: ${taito_project}-${taito_env}-basic-auth
    domains:
      - name: ${taito_domain}

  services:
    wordpress:
      path: /
      port: 80
      tier: frontend
      livenessPath: /wp-login.php
      # TODO: https://github.com/kubernetes/kubernetes/issues/27114
      livenessInitialDelay: 360
      readinessFailureThreshold: 36 # livenessInitialDelay / 10
      runAsUser:
      fsGroup:
      cpuRequest: 20m
      cpuLimit: 200m
      memoryRequest: 256Mi
      memoryLimit: 512Mi
      replicas: ${kubernetes_replicas}
      persistentVolumeMounts:
        - mountPath: /bitnami/apache
          volumePath: apache
          readOnly: false
        - mountPath: /bitnami/php
          volumePath: php
          readOnly: false
        - mountPath: /bitnami/wordpress
          volumePath: wordpress
          readOnly: false
      secretEnv:
        WORDPRESS_DATABASE_PASSWORD: ${db_database_name}-db-mgr.password
        WORDPRESS_PASSWORD: ${taito_project}-${taito_env}-admin.initialpassword
      env:
        MARIADB_HOST: '${db_database_real_host}'
        MARIADB_PORT_NUMBER: '${db_database_real_port}'
        WORDPRESS_DATABASE_NAME: ${db_database_name}
        WORDPRESS_DATABASE_USER: ${db_database_name}
        # Wordpress initial username
        WORDPRESS_USERNAME: changeme
