name: CI/CD Pipeline
on:
  push:
    branches:
      - dev
      - test
      - uat
      - stag
      - canary
      - prod
      - master
      - main

jobs:
  pipeline:
    name: Pipeline
    runs-on: ubuntu-latest
    timeout-minutes: 50
    container:
      image: ${_TEMPLATE_DEFAULT_TAITO_IMAGE}
      options: --privileged -v /etc/hosts:/tmp/etchosts # For VPN
      env:
        taito_mode: ci
        taito_image: ${_TEMPLATE_DEFAULT_TAITO_IMAGE}
        taito_ci_phases:
        IMAGE_TAG: ${{ github.sha }}
        DOCKER_HOST_PATH: /__w/wordpress-template/wordpress-template
        AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
    steps:
      # Init
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set environment
        run: echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Set authentication
        run: |
          if [ ! -z "${{ secrets[format('{0}_AZURE_CLIENT_ID', env.BRANCH)] }}" ]; then
            echo "AZURE_CLIENT_ID=${{ secrets[format('{0}_AZURE_CLIENT_ID', env.BRANCH)] }}" >> $GITHUB_ENV
            echo "AZURE_CLIENT_SECRET=${{ secrets[format('{0}_AZURE_CLIENT_SECRET', env.BRANCH)] }}" >> $GITHUB_ENV
          fi # END AZURE_CLIENT_ID

      # Configure Kubernetes API
      - name: Set Kubernetes API host if BRANCH_KUBE_API_HOST and BRANCH_KUBE_API_IP configured
        env:
          KUBE_API_HOST: ${{ secrets['KUBE_API_HOST'] }}
          KUBE_API_IP: ${{ secrets['KUBE_API_IP'] }}
          BRANCH_KUBE_API_HOST: ${{ secrets[format('{0}_KUBE_API_HOST', env.BRANCH)] }}
          BRANCH_KUBE_API_IP: ${{ secrets[format('{0}_KUBE_API_IP', env.BRANCH)] }}
        run: |
          if [ ! -z "${BRANCH_KUBE_API_HOST}" ]; then
            echo "${BRANCH_KUBE_API_IP} ${BRANCH_KUBE_API_HOST}" >> /tmp/etchosts
          elif [ ! -z "${KUBE_API_HOST}" ]; then
            echo "${KUBE_API_IP} ${KUBE_API_HOST}" >> /tmp/etchosts
          fi

      # Start VPN
      - name: Start VPN if BRANCH_OVPN_FILE and BRANCH_OVPN_PASSWORD configured
        env:
          OVPN_FILE: ${{ secrets['OVPN_FILE'] }}
          OVPN_PASSWORD: ${{ secrets['OVPN_PASSWORD'] }}
          BRANCH_OVPN_FILE: ${{ secrets[format('{0}_OVPN_FILE', env.BRANCH)] }}
          BRANCH_OVPN_PASSWORD: ${{ secrets[format('{0}_OVPN_PASSWORD', env.BRANCH)] }}
        run: |
          mkdir -p tmp
          if [ ! -z "${BRANCH_OVPN_PASSWORD}" ]; then
            echo "Starting VPN using BRANCH_OVPN_FILE"
            echo "$BRANCH_OVPN_FILE" > tmp/vpn.ovpn
            echo "$BRANCH_OVPN_PASSWORD" > tmp/vpn.password
          elif [ ! -z "${OVPN_PASSWORD}" ]; then
            echo "Starting VPN using OVPN_FILE"
            echo "$OVPN_FILE" > tmp/vpn.ovpn
            echo "$OVPN_PASSWORD" > tmp/vpn.password
          fi
          if [ -f tmp/vpn.ovpn ]; then
            echo "askpass tmp/vpn.password" >> tmp/vpn.ovpn
            openvpn --daemon --config tmp/vpn.ovpn
            echo "Sleeping 10 seconds"
            sleep 10
          fi

      # Prepare build
      - run: taito build prepare:$BRANCH $IMAGE_TAG

      # Prepare artifacts for deployment
      - run: taito artifact prepare:wordpress:$BRANCH $IMAGE_TAG

      # Deploy changes to target environment
      - run: taito wp-plugin-update:$BRANCH  || echo "WARNING: Failed updating wordpress plugins"
      - run: taito deployment deploy:$BRANCH  $IMAGE_TAG

      # Release artifacts
      - run: taito artifact release:wordpress:$BRANCH $IMAGE_TAG

      # Release build
      - run: taito build release:$BRANCH
